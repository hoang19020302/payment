# ===================== STAGE 1: BUILD =====================
FROM php:8.3-cli AS build

WORKDIR /var/www

# Cài PHP extensions + dev tools
RUN apt-get update && apt-get install -y \
    unzip git curl libzip-dev libpq-dev libonig-dev libxml2-dev libpng-dev \
    libjpeg-dev libfreetype6-dev libssl-dev zip build-essential \
    && docker-php-ext-install pdo pdo_mysql pdo_pgsql zip sockets mbstring exif pcntl bcmath gd \
    && pecl install redis && docker-php-ext-enable redis

# Cài Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Copy mã nguồn Laravel vào
COPY . .

# Cài PHP dependencies
RUN composer install --no-dev --optimize-autoloader --no-interaction

# Tải binary FrankenPHP cho x86_64
RUN curl -L https://github.com/dunglas/frankenphp/releases/download/v1.7.0/frankenphp-linux-x86_64 \
    -o /usr/local/bin/frankenphp && chmod +x /usr/local/bin/frankenphp

# Copy code ra thư mục sạch
RUN mkdir -p /app && cp -r . /app


# ===================== STAGE 2: RUNTIME =====================
FROM php:8.3-cli

WORKDIR /var/www

# Cài PHP extensions tối thiểu (không có tool build)
RUN apt-get update && apt-get install -y \
    libzip-dev libpq-dev libpng-dev libjpeg-dev libfreetype6-dev libonig-dev libxml2-dev libssl-dev \
    && docker-php-ext-install pdo pdo_mysql pdo_pgsql zip sockets mbstring exif pcntl bcmath gd \
    && pecl install redis && docker-php-ext-enable redis \
    && apt-get remove -y gcc g++ make autoconf build-essential \
    && apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/*

# Dùng cấu hình PHP production
RUN mv "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini"

# Copy php-custom.ini nếu có
COPY php-custom.ini "$PHP_INI_DIR/conf.d/99-php-custom.ini"

# Copy app + vendor từ stage build
COPY --from=build /app /var/www

# Copy binary FrankenPHP từ stage build
COPY --from=build /usr/local/bin/frankenphp /usr/local/bin/frankenphp

# Phân quyền Laravel (nếu cần)
RUN chown -R www-data:www-data /var/www/storage /var/www/bootstrap/cache

# Expose port mà FrankenPHP sẽ listen
EXPOSE 8000

# CMD chạy Laravel Octane với FrankenPHP
CMD ["php", "artisan", "octane:frankenphp", "--host=0.0.0.0", "--port=8000", "--workers=8", "--max-requests=1000", "--log-level=warn"]

